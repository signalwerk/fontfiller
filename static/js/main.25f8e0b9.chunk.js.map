{"version":3,"sources":["Store/index.js","util/parseInfo.js","DropFont/base64.js","DropFont/index.js","Reducer/index.js","Header/index.js","FontInfo/index.js","FillSelect/index.js","App.js","serviceWorker.js","index.js"],"names":["context","React","createContext","Provider","Consumer","codePoints","SPACE","examples","requiredChars","fallback","char","factor","writeFont","info","glyphs","push","opentype","Glyph","name","advanceWidth","path","Path","Object","keys","forEach","key","glyph","exists","dec","parseInt","width","Math","round","g","unicode","font","Font","familyName","styleName","fontSubfamily","unitsPerEm","ascender","os2","sTypoAscender","descender","sTypoDescender","tables","sTypoLineGap","sxHeight","sCapHeight","download","parseInfo","conf","head","table","en","hex","uni","find","unicodes","includes","findByUnicode","findGlyphByUni","i","length","fallbackChar","findFallbackWidth","base64ArrayBuffer","arrayBuffer","b","c","chunk","base64","encodings","bytes","Uint8Array","byteLength","byteRemainder","mainLength","DropFont","useContext","state","dispatch","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","type","payload","error","onerror","onload","binaryStr","result","parse","file","fontBase64","err","message","readAsArrayBuffer","useDropzone","getRootProps","getInputProps","isDragActive","className","role","aria-label","initialState","reducer","action","version","Intl","DateTimeFormat","year","month","day","format","Date","process","split","reverse","join","Header","href","target","rel","FontInfo","map","onClick","filter","JSON","stringify","FillSelect","line","String","fromCharCode","item","arr","style","App","useState","useReducer","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25f8e0b9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst context = React.createContext({});\n\nexport const Provider = context.Provider;\nexport const Consumer = context.Consumer;\nexport default context;\n","// import { Glyph, Path, Font } from \"opentype.js\";\nimport opentype from \"opentype.js\";\n\nexport const codePoints = {\n  \"ZERO WIDTH SPACE\": \"200B\",\n  SPACE: \"0020\",\n  \"NO-BREAK SPACE\": \"00A0\",\n  \"THIN SPACE\": \"2009\",\n  \"NARROW NO-BREAK SPACE\": \"202F\",\n  \"HAIR SPACE\": \"200A\",\n  \"SIX-PER-EM SPACE\": \"2006\",\n  \"FOUR-PER-EM SPACE\": \"2005\",\n  \"THREE-PER-EM SPACE\": \"2004\",\n  \"EN SPACE\": \"2002\",\n  \"EM SPACE\": \"2003\",\n  \"FIGURE SPACE\": \"2007\",\n  \"PUNCTUATION SPACE\": \"2008\",\n  \"DIGIT ZERO\": \"0030\",\n  \"FULL STOP\": \"002E\",\n};\n\nexport const examples = {\n  \"ZERO WIDTH SPACE\":\n    \"🟢 This|Is|A|Very|Long|Test|Word|This|Is|A|Very|Long|Test|Word|This|Is|A|Very|Long|Test|Word|This|Is|A|Very|Long|Test|Word|This|Is|A|Very|Long|Test|Word|This|Is|A|Very|Long|Test|Word|This|Is|A|Very|Long|Test|Word\",\n  SPACE: \"HHH|HHH¶nnn|nnn\",\n  \"NO-BREAK SPACE\":\n    \"🔴 HHHHHHHHHHHHHHHHHHHHHHHHHHHH|HHHHHHHHHHHHHHHHHHHHHHHHHHHH¶🟢 HHHHHHHHHHHHHHHHHHHHHHHHHHHH#HHHHHHHHHHHHHHHHHHHHHHHHHHHH\",\n  \"THIN SPACE\": \"🔴 800|km¶🟢 800#km\",\n  \"NARROW NO-BREAK SPACE\": \"🔴 800|km¶🟢 800#km\",\n  \"HAIR SPACE\": \"🔴 800|000|000¶🟢 800#000#000\",\n  \"SIX-PER-EM SPACE\": \"🔴 →|←¶🟢 →#←\",\n  \"FOUR-PER-EM SPACE\": \"🔴 →|←¶🟢 →#←\",\n  \"THREE-PER-EM SPACE\": \"🔴 →|←¶🟢 →#←\",\n  \"EN SPACE\": \"🔴 →|←¶🟢 →#←\",\n  \"EM SPACE\": \"🔴 →|←¶🟢 →#←\",\n  \"FIGURE SPACE\": \"🔴 00|00¶🟢 00#00\",\n  \"PUNCTUATION SPACE\": \"🔴 00|00¶🟢 00#00\",\n};\n\nexport const requiredChars = {\n  SPACE: {\n    fallback: false,\n  },\n  \"ZERO WIDTH SPACE\": {\n    fallback: [{ char: \"SPACE\", factor: 0 }],\n  },\n  \"NO-BREAK SPACE\": {\n    fallback: [{ char: \"SPACE\", factor: 1 }],\n  },\n  \"THIN SPACE\": {\n    fallback: [{ char: \"SPACE\", factor: 0.7 }],\n  },\n  \"NARROW NO-BREAK SPACE\": {\n    fallback: [\n      { char: \"THIN SPACE\", factor: 1 },\n      { char: \"SPACE\", factor: 0.7 },\n    ],\n  },\n  \"HAIR SPACE\": {\n    fallback: [{ char: \"SPACE\", factor: 0.3 }],\n  },\n  \"SIX-PER-EM SPACE\": {\n    fallback: [{ char: \"EM SPACE\", factor: 1 / 6 }],\n  },\n  \"FOUR-PER-EM SPACE\": {\n    fallback: [{ char: \"EM SPACE\", factor: 1 / 4 }],\n  },\n  \"THREE-PER-EM SPACE\": {\n    fallback: [{ char: \"EM SPACE\", factor: 1 / 3 }],\n  },\n  \"EN SPACE\": {\n    fallback: [{ char: \"EM SPACE\", factor: 1 / 2 }],\n  },\n  \"EM SPACE\": {\n    fallback: false,\n  },\n  \"FIGURE SPACE\": {\n    fallback: [{ char: \"DIGIT ZERO\", factor: 1 }],\n  },\n  \"PUNCTUATION SPACE\": {\n    fallback: [{ char: \"FULL STOP\", factor: 1 }],\n  },\n};\n\nexport const findFallbackWidth = (key, glyphs) => {\n  const fallback = requiredChars[key].fallback;\n\n  for (var i = 0; i < fallback.length; i++) {\n    const fallbackChar = glyphs[fallback[i].char];\n    if (fallbackChar && fallbackChar.exists) {\n      return {\n        char: fallback[i].char,\n        width: fallbackChar.width,\n        factor: fallback[i].factor,\n      };\n    }\n  }\n  return false;\n};\n\nconst findByUnicode = (glyph, uni) => {\n  return glyph.unicodes.includes(uni);\n};\n\nconst findGlyphByUni = (glyphs, uni) => {\n  let key = Object.keys(glyphs).find((key) => findByUnicode(glyphs[key], uni));\n\n  if (key) {\n    return glyphs[key];\n  }\n\n  return null;\n};\n\nexport const writeFont = (info) => {\n  let glyphs = [];\n  // The notdefGlyph always needs to be included.\n  glyphs.push(\n    new opentype.Glyph({\n      name: \".notdef\",\n      advanceWidth: 650,\n      path: new opentype.Path(),\n    })\n  );\n\n  Object.keys(info.glyphs).forEach((key) => {\n    const glyph = info.glyphs[key];\n\n    if (glyph.exists === false && glyph.fallback) {\n      const dec = parseInt(codePoints[key], 16);\n      const width = Math.round(glyph.fallback.width * glyph.fallback.factor);\n\n      let g = new opentype.Glyph({\n        name: `uni${codePoints[key]}`,\n        unicode: dec,\n        advanceWidth: width,\n        path: new opentype.Path(),\n      });\n\n      // fix bug\n      // see https://github.com/opentypejs/opentype.js/pull/430\n      g.advanceWidth = width;\n\n      glyphs.push(g);\n    }\n  });\n\n  // Create the font using measurements + glyphs defined above.\n  var font = new opentype.Font({\n    familyName: \"FontFiller\",\n    styleName: info.fontSubfamily,\n    unitsPerEm: info.unitsPerEm,\n    ascender: info.os2.sTypoAscender,\n    descender: info.os2.sTypoDescender,\n    glyphs: glyphs,\n  });\n\n  font.tables.os2 = {\n    ...font.tables.os2,\n    sTypoLineGap: info.os2.sTypoLineGap,\n    sxHeight: info.os2.sxHeight,\n    sCapHeight: info.os2.sCapHeight,\n  };\n\n  font.download();\n};\n\nexport const parseInfo = (font) => {\n  let conf = {\n    unitsPerEm: null,\n    fontSubfamily: null,\n    os2: {\n      sTypoAscender: null,\n      sTypoDescender: null,\n      sTypoLineGap: null,\n      sxHeight: null,\n      sCapHeight: null,\n    },\n    glyphs: null,\n  };\n\n  if (font.tables.head) {\n    let table = font.tables.head;\n    conf.unitsPerEm = table.unitsPerEm;\n  }\n\n  if (font.tables.name) {\n    let table = font.tables.name;\n    conf.fontSubfamily = table.fontSubfamily.en;\n  }\n\n  if (font.tables.os2) {\n    let table = font.tables.os2;\n    conf.os2.sTypoAscender = table.sTypoAscender;\n    conf.os2.sTypoDescender = table.sTypoDescender;\n    conf.os2.sTypoLineGap = table.sTypoLineGap;\n    conf.os2.sxHeight = table.sxHeight;\n    conf.os2.sCapHeight = table.sCapHeight;\n  }\n\n  conf.glyphs = {};\n  Object.keys(codePoints).forEach((key) => {\n    const hex = codePoints[key];\n    conf.glyphs[key] = {};\n\n    let glyph = findGlyphByUni(font.glyphs.glyphs, parseInt(hex, 16));\n\n    conf.glyphs[key].exists = !!glyph;\n\n    if (glyph) {\n      conf.glyphs[key].width = glyph.advanceWidth;\n    }\n  });\n\n  Object.keys(conf.glyphs).forEach((key) => {\n    if (!conf.glyphs[key].exists) {\n      conf.glyphs[key].fallback = findFallbackWidth(key, conf.glyphs);\n    }\n  });\n\n  return conf;\n};\n","// https://gist.github.com/jonleighton/958841\nexport function base64ArrayBuffer(arrayBuffer) {\n  let base64 = \"\";\n  const encodings =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  const bytes = new Uint8Array(arrayBuffer);\n  const byteLength = bytes.byteLength;\n  const byteRemainder = byteLength % 3;\n  const mainLength = byteLength - byteRemainder;\n\n  let a;\n  let b;\n  let c;\n  let d;\n  let chunk;\n\n  // Main loop deals with bytes in chunks of 3\n  for (let i = 0; i < mainLength; i += 3) {\n    // Combine the three bytes into a single integer\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n    // Use bitmasks to extract 6-bit segments from the triplet\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n    b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n    c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n    d = chunk & 63; // 63       = 2^6 - 1\n\n    // Convert the raw binary segments to the appropriate ASCII encoding\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n  }\n\n  // Deal with the remaining bytes and padding\n  if (byteRemainder === 1) {\n    chunk = bytes[mainLength];\n\n    a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n    // Set the 4 least significant bits to zero\n    b = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n    base64 += `${encodings[a]}${encodings[b]}==`;\n  } else if (byteRemainder === 2) {\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n    a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n    b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n\n    // Set the 2 least significant bits to zero\n    c = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n    base64 += `${encodings[a]}${encodings[b]}${encodings[c]}=`;\n  }\n\n  return base64;\n}\n","import React, { useContext, useCallback, Fragment } from \"react\";\nimport opentype from \"opentype.js\";\n\nimport { useDropzone } from \"react-dropzone\";\nimport context from \"../Store\";\nimport { parseInfo } from \"../util/parseInfo\";\nimport { base64ArrayBuffer } from \"./base64\";\n\nimport \"./styles.css\";\n\n// import opentypejs from 'opentype.js';\n\nfunction DropFont() {\n  const [state, dispatch] = useContext(context);\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader();\n\n      reader.onabort = () =>\n        dispatch({\n          type: \"ERROR\",\n          payload: {\n            error: \"file reading was aborted\",\n          },\n        });\n\n      reader.onerror = () =>\n        dispatch({\n          type: \"ERROR\",\n          payload: {\n            error: \"file reading has failed\",\n          },\n        });\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n\n        const binaryStr = reader.result;\n\n        try {\n          let font = opentype.parse(binaryStr);\n\n          dispatch({\n            type: \"LOAD\",\n            payload: {\n              file: font,\n              info: parseInfo(font),\n            },\n          });\n\n          // const readerBase64 = new FileReader();\n\n          // readerBase64.onloadend = function() {\n          // var base64 = this.result;\n\n          dispatch({\n            type: \"LOAD_BASE_64\",\n            payload: {\n              fontBase64: base64ArrayBuffer(binaryStr),\n            },\n          });\n          // };\n\n          // readerBase64.readAsDataURL(binaryStr);\n        } catch (err) {\n          dispatch({\n            type: \"ERROR\",\n            payload: {\n              error: err.message,\n            },\n          });\n        }\n      };\n\n      if (acceptedFiles.length === 1) {\n        acceptedFiles.forEach((file) => reader.readAsArrayBuffer(file));\n      } else {\n        dispatch({\n          type: \"ERROR\",\n          payload: {\n            error: \"please select only one file\",\n          },\n        });\n      }\n    },\n    [dispatch]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <Fragment>\n      <div className=\"DropFont\" {...getRootProps()}>\n        {state.fontBase64 && (\n          <style type=\"text/css\">\n            {`@font-face {\n                font-family: \"my-loaded-font\";\n                font-weight: normal;\n                src: url(\"data:font/opentype;base64,${state.fontBase64}\");\n            }`}\n          </style>\n        )}\n\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <span className=\"DropFont__caption\">Drop the file here ...</span>\n        ) : (\n          <span className=\"DropFont__caption\">\n            Drop a font here, or click to select file\n          </span>\n        )}\n\n        <br />\n        <small>Support for WOFF, OTF, TTF</small>\n        <br />\n\n        {state.error && (\n          <h2>\n            <span role=\"img\" aria-label=\"Warning\">\n              ⚠️\n            </span>{\" \"}\n            {state.error}\n          </h2>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default DropFont;\n","export const initialState = {\n  file: null,\n  fontBase64: null,\n  info: null,\n  error: null,\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"ERROR\":\n      return {\n        ...state,\n        error: action.payload.error,\n        file: null,\n        info: null,\n      };\n\n    case \"LOAD\":\n      return {\n        ...state,\n        file: action.payload.file,\n        info: action.payload.info,\n        error: null,\n      };\n\n    case \"LOAD_BASE_64\":\n      return {\n        ...state,\n        fontBase64: action.payload.fontBase64,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nconst version = new Intl.DateTimeFormat(\"de-DE\", {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n})\n  .format(new Date(parseInt(process.env.REACT_APP_BUILD_TIME, 10) * 1000))\n  .split('.')\n  .reverse()\n  .join('-');\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n      <hr />\n      <h1>FontFiller</h1>\n      <hr />\n      <p>\n        Inspect fonts and generate missing whitespace characters\n        for&nbsp;incomplete&nbsp;fonts.\n      </p>\n\n      <p className=\"small\">\n        {\"Code by Stefan Huber · \"}\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/signalwerk/fontfiller/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {\" \"}\n          OpenSource on GitHub\n        </a>\n        {\" · \"}\n        <span className=\"version\">Version {version}</span>\n      </p>\n      <hr />\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useContext, Fragment } from \"react\";\nimport context from \"../Store\";\nimport { codePoints, requiredChars, writeFont } from \"../util/parseInfo\";\n\nfunction FontInfo() {\n  const [state] = useContext(context);\n\n  return (\n    <header className=\"FontInfo\">\n      <h3>Inspected characters</h3>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Codepoint</th>\n            <th>in Font</th>\n            <th className=\"right\">Generate in FontFiller</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(requiredChars).map((key) => (\n            <tr key={key}>\n              <td>\n                <small>U+{codePoints[key]}</small> {key}\n              </td>\n              <td>\n                {state.info &&\n                  state.info.glyphs &&\n                  (state.info.glyphs[key].exists ? \"🟢 YES\" : \"🔴 NO\")}\n\n                {!state.info && \"...\"}\n              </td>\n              <td className=\"right\">\n                {state.info &&\n                  state.info.glyphs &&\n                  state.info.glyphs[key].exists === false &&\n                  (state.info.glyphs[key].fallback ? \"YES 🟢\" : \"\")}\n                {!state.info && \"...\"}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {state.info && (\n        <Fragment>\n          <button onClick={() => writeFont(state.info)}>\n            Download FontFiller (TTF)\n          </button>\n\n          <h2>Convert & load</h2>\n          <p>\n            After downloading the fillter-font convert the TTF to Woff/Woff2\n            with{\" \"}\n            <a\n              className=\"App-link\"\n              href=\"https://www.fontsquirrel.com/tools/webfont-generator\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Font Squirrel.\n            </a>{\" \"}\n            Then include like that:\n          </p>\n          <pre>\n            {`@font-face {\n    font-family: \"YourFillerFont\";\n    font-weight: 400;\n    font-style: normal;\n    src: url(\"./fontfiller.woff2\") format(\"woff2\"),\n        url(\"./fontfiller.woff\") format(\"woff\");\n    unicode-range: ${Object.keys(state.info.glyphs)\n      .filter(\n        (key) =>\n          state.info.glyphs &&\n          state.info.glyphs[key].exists === false &&\n          state.info.glyphs[key].fallback\n      )\n      .map((key) => \"U+\" + codePoints[key])\n      .join(\", \")};\n}`}\n          </pre>\n          <p>and use it like that:</p>\n          <pre>\n            {`html {\n    font-family: \"YourFillerFont\", \"HereYourNormalFont\", sans-serif;\n}`}\n          </pre>\n        </Fragment>\n      )}\n\n      {state.info && (\n        <details>\n          <summary>Debug-Infos</summary>\n          <pre>{JSON.stringify(state.info, null, 2)}</pre>\n        </details>\n      )}\n      <br />\n    </header>\n  );\n}\n\nexport default FontInfo;\n","import React, { useContext, Fragment } from \"react\";\nimport context from \"../Store\";\nimport { codePoints, examples } from \"../util/parseInfo\";\nimport \"./styles.css\";\n\nfunction FillSelect() {\n  const [state] = useContext(context);\n\n  if (!state.info) {\n    return null;\n  }\n\n  return (\n    <div className=\"FillSelect\">\n      <h2>Examples</h2>\n\n      <ul className=\"FillSelect__list\">\n        {Object.keys(state.info.glyphs).map(\n          (key) =>\n            state.info.glyphs &&\n            state.info.glyphs[key].exists === false &&\n            state.info.glyphs[key].fallback && (\n              <li className=\"FillSelect__item FillSelect__item--missing\">\n                {examples[key].split(\"¶\").map((line) => (\n                  <h3 className=\"FillSelect__example\">\n                    {line\n\n                      .split(\"|\")\n                      .join(String.fromCharCode(parseInt(codePoints[key], 16)))\n\n                      .split(\"#\")\n                      .map((item, i, arr) => (\n                        <Fragment>\n                          <span>{item}</span>\n                          {i !== arr.length - 1 && (\n                            <span\n                              className=\"FillSelect__spaceMock\"\n                              style={{\n                                width: `${\n                                  (1 / state.info.unitsPerEm) *\n                                  (state.info.glyphs[key].fallback.width *\n                                    state.info.glyphs[key].fallback.factor)\n                                }em`,\n                              }}\n                            ></span>\n                          )}\n                        </Fragment>\n                      ))}\n                  </h3>\n                ))}\n                <span role=\"img\" aria-label=\"info\">\n                  🔴\n                </span>{\" \"}\n                <small>U+{codePoints[key]}</small> {key} not in font <br />\n                <span>\n                  <span role=\"img\" aria-label=\"new\">\n                    🟢\n                  </span>{\" \"}\n                  <small>\n                    U+{codePoints[state.info.glyphs[key].fallback.char]}\n                  </small>{\" \"}\n                  {state.info.glyphs[key].fallback.char} used to generate\n                  fallback in FontFiller{\" \"}\n                  {state.info.glyphs[key].fallback.factor !== 1 ? (\n                    <span>\n                      (Width × {state.info.glyphs[key].fallback.factor})\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </span>\n              </li>\n            )\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default FillSelect;\n","import React, { useReducer } from \"react\";\nimport DropFont from \"./DropFont\";\nimport { Provider } from \"./Store\";\nimport { reducer, initialState } from \"./Reducer\";\nimport Header from \"./Header\";\nimport FontInfo from \"./FontInfo\";\nimport FillSelect from \"./FillSelect\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const useState = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <Provider value={useState}>\n        <Header />\n        <DropFont />\n        <hr />\n\n        <FontInfo />\n        <FillSelect />\n\n        <p className=\"small\">\n          Thanks to{\" \"}\n          <a\n            className=\"App-link\"\n            href=\"https://github.com/opentypejs/opentype.js\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {\" \"}\n            opentype.js\n          </a>\n        </p>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}